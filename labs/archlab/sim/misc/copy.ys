# Execution begins at address 0
        .pos 0
        irmovq stack, %rsp  # Set up stack pointer
        call main           # Execute main program
        halt                # Terminate Program

.align 8
# Source block
src:
        .quad 0x00a
        .quad 0x0b0
        .quad 0xc00
# Destination block
dest:
        .quad 0x111
        .quad 0x222
        .quad 0x333

main:
    irmovq src, %rdi
    irmovq dest, %rsi
    irmovq $3, %rdx
    call copy_block           # copy_block(src, dest, len)
    ret

# void copy_block(long *src, long *dest, long len)
# src in %rdi, dest in %rsi, len in %rdx
copy_block:
    pushq %rbx
    irmovq $8, %r8
    irmovq $1, %r9
    xorq %rax, %rax
    andq %rdx, %rdx
    jmp test
loop:
    mrmovq (%rdi), %rbx
    rmmovq %rbx, (%rsi)
    xorq %rbx, %rax
    addq %r8, %rdi
    addq %r8, %rsi
    subq %r9, %rdx
test:
    jg loop
    popq %rbx
    ret

# Stack starts here and grows to lower addresses
        .pos 0x200
stack:
